#!/bin/bash

#set -x
MAMEVER=""
MAMEBUILD=""
MAME64=0
DEBUG=""
DERIV=""

function _usage {
cat << USAGE
$(basename $0)
 -h this help
 -b build name (the src dir to take mame from)
 -m mame version (e.g. 243)
 -s this is a mame64 build (only targeting mame64, old builds)
 -d this is a debug build (only targeting mamed)
 -f build type (e.g wolf this influences compile dir/local dir)
 -o output directory to put this build
USAGE
  exit 1
}

OPTSTRING=":hb:m:df:o:"
while getopts $OPTSTRING ARG
do
  case $ARG in
    h)
      _usage
      ;;
    b)
      MAMEBUILD=$OPTARG
      ;;
    m)
      MAMEVER=$OPTARG
      ;;
    s)
      MAME64=1
      ;;
    d)
      DEBUG="d"
      ;;
    f)
      DERIV=${OPTARG}
      ;;
    o)
      OUTPUTDIR=${OPTARG}
      ;;
  esac
done

[[ ${#} -eq 0 ]]    && echo "No arguments supplied"                  && _usage

REQFAIL=0
#[ -z "$MAMEBUILD" ] && echo "Pass -b including the local mamebuild"  && REQFAIL=1
[ -z "$MAMEVER" ]   && echo "Pass -m with mame version (e.g 236)"    && REQFAIL=1
[ $REQFAIL -ne 0 ]  && _usage

#SRC=$HOME/devel/com.github/${DERIV}mame/${DERIV}mame${MAMEBUILD}/
SRC=$HOME/volumes/mame-build/${DERIV}mame${MAMEBUILD}/
DEST=$HOME/games/emulator-${DERIV}mame${MAMEVER}${DEBUG}${OUTPUTDIR}/

[ ! -d $DEST ] && mkdir -p $DEST
MAMECVER=$($SRC/${DERIV}mame${DEBUG} -version | awk '{print $1}' | cut -d'.' -f2)

REQFAIL=0
[ "$MAMECVER" != "$MAMEVER" ] && echo "$MAMECVER does not match $MAMEVER" && REQFAIL=1
if [[ $REQFAIL -eq 1 && -f $SRC/mame64 ]]
then
  MAMECVER=$($SRC/mame64 -version | awk '{print $1}' | cut -d'.' -f2)
  MAME64=1
  REQFAIL=0
fi
[ "$MAMECVER" != "$MAMEVER" ] && echo "$MAMECVER for old build does not match $MAMEVER" && REQFAIL=1
[ $REQFAIL -ne 0 ] && exit $REQFAIL

echo "Updating $DEST"
rsync -avzP --exclude-from update-mame.exclude "${SRC}" "${DEST}"

[ $MAME64 -eq 1 ] && cp $SRC/mame64 $DEST/mame
